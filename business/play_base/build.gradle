apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'


android {
    // 优化编译速度 如果有用到kapt添加如下配置
    kapt {
        useBuildCache = true
        javacOptions {
            option("-Xmaxerrs", 500)
        }
    }
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    defaultConfig {
        def CONFIG = { k -> "\"${project.properties.get(k)}\"" }
        println "=======================${rootProject.ext.android.applicationId}"
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName

        manifestPlaceholders = [
                APPLICATION_ID: "${rootProject.ext.android.applicationId}",
        ]

        renderscriptTargetApi 19
        renderscriptSupportModeEnabled true    // Enable RS support
    }
    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
            if (isBuildModule.toBoolean()) {
            } else {
                resources {
                    //正式版本时，排除debug文件夹下所有调试文件
                    exclude 'src/debug/*'
                }
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    repositories {
        flatDir {
            dirs 'libs'
        }
    }
    dataBinding {
        enabled true
    }
    dexOptions {
        preDexLibraries true
        maxProcessCount 8
    }
    //kotlin @Parcelize 支持
    androidExtensions {
        experimental = true
    }

}
dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    api rootProject.ext.dependencies["photoview"]
    api rootProject.ext.dependencies["magic-indicator"]
    api rootProject.ext.dependencies["PickerView"]
    api project(':base_module:module_common_res')
    api project(':base_module:module_widget')
    api project(':base_module:module_pay')
    api project(':base_module:module_aop')
//    implementation project(':compile:router')
//    kapt project(':compile:routerCompiler')
}
